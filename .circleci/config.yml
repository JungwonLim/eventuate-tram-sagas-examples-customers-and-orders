version: 2.1
orbs:
  build-and-test:
    jobs:
      build-and-test:
        parameters:
          script:
            description: the script to execute
            type: string
          resource_class:
            description: the resource class
            type: string
            default: 'medium'
        machine:
          image: ubuntu-2004:202101-01
        resource_class: <<parameters.resource_class>>
        working_directory: ~/eventuate-tram-sagas-examples-customers-and-orders
        steps:
          - checkout
          - restore_cache:
              keys:
                - eventuate-tram-sagas-examples-customers-and-orders-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
                - eventuate-tram-sagas-examples-customers-and-orders-
          - run:
              command: |
                . ./.circleci/setenv-circle-ci.sh
                ./gradlew --refresh-dependencies testClasses
          - save_cache:
              paths:
                - ~/.gradle
                - ~/.m2
              key: eventuate-tram-sagas-examples-customers-and-orders-{{ checksum "gradle.properties" }}-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
          - run:
              command: |
                . ./.circleci/setenv-circle-ci.sh
                <<parameters.script>>
          - run:
              name: Save test results
              command: |
                mkdir -p ~/junit
                find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
              when: always
          - run:
              name: Print container logs
              command: |
                export TERM=dumb
                ./.circleci/print-container-logs.sh
              when: always
          - store_test_results:
              path: ~/junit
          - store_artifacts:
              path: ~/junit
          - store_artifacts:
              path: ~/container-logs
workflows:
  version: 2.1
  build-test-and-deploy:
    jobs:
      - build-and-test/build-and-test:
          name: build-and-test-all-mysql-intel
          script: ./build-and-test-all-mysql.sh
      - build-and-test/build-and-test:
          name: build-and-test-all-mysql-arm
          resource_class: arm.medium
          script: ./build-and-test-all-mysql.sh
      - build-and-test/build-and-test:
          name: build-and-test-all-postgres
          script: ./build-and-test-all-postgres.sh
      - build-and-test/build-and-test:
          name: deploy-artifacts
          requires:
            -  build-and-test-all-mysql-intel
            -  build-and-test-all-mysql-arm
            -  build-and-test-all-postgres
          script: ./publish-docker-images.sh
